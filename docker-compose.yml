version: '3.8'

services:
  nginx:
    image: nginx:alpine
    ports:
      - "10000:80"
    volumes:
      - ./public:/var/www/html/public:ro
      - ./docker/default.conf:/etc/nginx/conf.d/default.conf:ro
    depends_on:
      - php
    networks:
      - weather-app

  php:
    build:
      context: .
      dockerfile: Dockerfile
    volumes:
      - .:/var/www/html
    extra_hosts:
      - "host.docker.internal:host-gateway"
    depends_on:
      database:
        condition: service_healthy
    networks:
      - weather-app

  database:
    image: postgres:14-alpine
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
    ports:
      - "5432:5432"  # Добавляем проброс порта, чтобы подключаться извне
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 5s
      timeout: 5s
      retries: 5
    networks:
      - weather-app

  migrations:
    build:
      context: .
      dockerfile: Dockerfile
    command: >
      sh -c "php bin/console doctrine:database:create --if-not-exists --no-interaction &&
             php bin/console doctrine:migrations:migrate --no-interaction"
    environment:
      - DATABASE_URL=postgresql://postgres:postgres@database:5432/weather_app?serverVersion=14&charset=utf8
    depends_on:
      database:
        condition: service_healthy
    networks:
      - weather-app

  mailpit:
    image: axllent/mailpit
    ports:
      - "8025:8025"
    environment:
      MP_SMTP_AUTH_ACCEPT_ANY: 1
      MP_SMTP_AUTH_ALLOW_INSECURE: 1
    networks:
      - weather-app

networks:
  weather-app:
    driver: bridge

volumes:
  postgres_data: